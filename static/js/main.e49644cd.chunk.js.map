{"version":3,"sources":["features/HomePage/index.tsx","features/PeoplePage/Loader/Loader.tsx","api.ts","features/PeoplePage/usePeople.tsx","features/PeoplePage/OnePerson/index.tsx","features/PeoplePage/index.tsx","features/NotFoundPage/index.tsx","features/Navigation/index.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","OnePerson","person","getParentSlug","slug","useParams","navigate","useNavigate","classNames","sex","to","onClick","url","replace","name","born","died","motherName","fatherName","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","error","setError","useEffect","fetchData","data","parentName","parent","find","p","usePeople","length","map","nanoid","NotFoundPage","Navigation","role","isActive","path","element","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e49644cd.chunk.js","sourcesContent":["export const HomePage = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nexport const usePeople = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getPeople();\n\n        setPeople(data);\n      } catch (e) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const getParentSlug = (parentName: string | null) => {\n    const parent = people.find(p => p.name === parentName);\n\n    if (parent) {\n      return (\n        <Link\n          to={`/people/${parent.slug}`}\n          className={parent.sex === 'f' ? 'has-text-danger' : ''}\n\n        >\n          {parent.name}\n        </Link>\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return {\n    people, isLoading, error, getParentSlug,\n  };\n};\n","import { Link, useNavigate, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../../types';\n\ntype Props = {\n  person: Person,\n  getParentSlug: (parentName: string | null) => string | JSX.Element;\n};\n\nexport const OnePerson = ({\n  person,\n  getParentSlug,\n}: Props) => {\n  const { slug } = useParams();\n  const navigate = useNavigate();\n\n  const cleaningHandler = (url: string) => {\n    navigate(url, { replace: true });\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          className={person.sex === 'f' ? 'has-text-danger' : ''}\n          to={`/people/${person.slug}`}\n          onClick={() => cleaningHandler(`/people/${person.slug}`)}\n        >\n          {person.name}\n        </Link>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{getParentSlug(person.motherName)}</td>\n      <td>{getParentSlug(person.fatherName)}</td>\n    </tr>\n  );\n};\n","import { nanoid } from 'nanoid';\nimport { Loader } from './Loader';\nimport { usePeople } from './usePeople';\nimport { OnePerson } from './OnePerson';\n\nexport const PeoplePage = () => {\n  const {\n    people,\n    error,\n    isLoading,\n    getParentSlug,\n  }\n    = usePeople();\n\n  return (\n    <div data-cy=\"app\">\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">People Page</h1>\n\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!isLoading && (people.length < 1) && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              { people.length > 0\n                && (\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"table is-striped\n                  is-hoverable is-narrow is-fullwidth\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {people.map(person => (\n                        <OnePerson\n                          key={nanoid()}\n                          person={person}\n                          getParentSlug={getParentSlug}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                )}\n\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n\n  );\n};\n","export const NotFoundPage = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  </main>\n);\n","import {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { HomePage } from '../HomePage';\nimport { PeoplePage } from '../PeoplePage';\nimport { NotFoundPage } from '../NotFoundPage';\n\nexport const Navigation = () => {\n  return (\n    <>\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive })}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive })}\n            >\n              People\n            </NavLink>\n\n          </div>\n        </div>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage />} />\n        <Route path=\"/people/:slug\" element={<PeoplePage />} />\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" />}\n        />\n        <Route\n          path=\"*\"\n          element={<NotFoundPage />}\n        />\n      </Routes>\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigation } from './features/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}